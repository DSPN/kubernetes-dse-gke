apiVersion: v1
kind: Service
metadata:
  name: grafana-ext-lb
  labels:
    app: grafana
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    name: port-3000
  selector:
    app: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    name: port-3000
  clusterIP: None
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  serviceName: "grafana"
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: dse-grafana-demo
        image: "grafana/grafana:5.3.2"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "2"
            memory: "4000Mi"
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        ports:
        - containerPort: 3000
          name: port-3000
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-provisioning-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-provisioning-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
      volumes:
      - name: grafana-data
        emptyDir: {}
      - name: grafana-provisioning-datasources
        configMap:
          name: grafana-provisioning-datasource-config
      - name: grafana-provisioning-dashboards
        configMap:
          name: grafana-provisioning-dashboards-config
      - name: grafana-dashboards
        emptyDir: {}
