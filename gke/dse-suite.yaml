apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: opscenter-ext-lb
  labels:
    app: opscenter
spec:
  type: LoadBalancer
  ports:
  - port: 8443
    name: opsc-secure-port
  selector:
    app: opscenter
---
apiVersion: v1
kind: Service
metadata:
  name: opscenter
  labels:
    app: opscenter
spec:
  ports:
  - port: 8888
    name: opsc-gui-port
  - port: 8443
    name: opsc-secure-port
  - port: 61620
    name: port-61620
  clusterIP: None
  selector:
    app: opscenter
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: opscenter
spec:
  serviceName: "opscenter"
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: opscenter
    spec:
      securityContext:
        fsGroup: 998
      containers:
        - name: opscenter
          image: gcr.io/datastax-public/dse-opscenter:6.5.3
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command: ["/update_admin_password.sh"]
          resources:
            requests:
              cpu: "2"
              memory: "4000Mi"
          env:
          - name: DS_LICENSE
            value: accept
          - name: OPSC_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: opsc
                key: admin_password 
          ports:
          - containerPort: 8888
            name: opsc-gui-port
          - containerPort: 61620
            name: port-61620
          volumeMounts:
          - name: config-volume
            mountPath: /config
          - name: config-clusters-volume
            mountPath: /opt/opscenter/conf/clusters
          - name: ssl-store-volume
            mountPath: /var/lib/opscenter/ssl
      volumes:
      - name: config-volume
        configMap:
          name: opsc-config
      - name: ssl-store-volume
        configMap:
          name: opsc-ssl-config
  volumeClaimTemplates:
  - metadata:
      name: config-clusters-volume
      annotations:
        volume.beta.kubernetes.io/storage-class: fast
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: dse 
  labels:
    app: dse
spec:
  ports:
  - port: 9042
    name: cql-port
  clusterIP: None
  selector:
    app: dse
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: dse
spec:
  serviceName: "dse"
  replicas: 3
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dse
    spec:
      securityContext:
        fsGroup: 999
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - dse
            topologyKey: kubernetes.io/hostname
      initContainers:
      - name: init-opsc-up
        image: gcr.io/datastax-public/dse-curl:1.0
        command: ['sh', '-c', 'until curl -k https://${OPSC_DNS}:8443; do echo waiting for OPSC; sleep 5; done;']
        env:
        - name: OPSC_DNS
          value: opscenter-0.opscenter.default.svc.cluster.local
      terminationGracePeriodSeconds: 12000
      containers:
      - name: dse
        image: datastax/dse-server:6.0.0-openjdk8
        args: ["-s", "-k", "-g"]
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "2"
            memory: "4000Mi"
        env:
        - name: DS_LICENSE
          value: accept
        - name: SEEDS
          value: dse-0.dse.default.svc.cluster.local,dse-1.dse.default.svc.cluster.local,dse-2.dse.default.svc.cluster.local
        - name: CLUSTER_NAME
          value: "My_Cluster"
        - name: NUM_TOKENS
          value: "64"
        - name: DC
          value: "DC-1"
        - name: RACK
          value: "rack-1"
        - name: OPSCENTER_IP
          value: opscenter-0.opscenter.default.svc.cluster.local
        - name: SNITCH
          value: GossipingPropertyFileSnitch
        ports:
        - containerPort: 7000
          name: intra-node-port
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx-port
        - containerPort: 8609
          name: inter-node-msg
        - containerPort: 9042
          name: cql-port
        - containerPort: 9160
          name: thrift-port
        - containerPort: 8983
          name: solr-port
        - containerPort: 8984
          name: solr-int-node
        - containerPort: 4040
          name: spark-app-port
        - containerPort: 7077
          name: spark-int-node
        - containerPort: 7080
          name: spark-m-web
        - containerPort: 7081
          name: spark-w-web
        - containerPort: 8090
          name: spark-job
        - containerPort: 9999
          name: spark-job-jmx
        - containerPort: 18080
          name: spark-histor
        - containerPort: 8182
          name: gremlin-port
        - containerPort: 5598
          name: dsefs-public
        - containerPort: 5599
          name: dsefs-private
        - containerPort: 61621
          name: ds-agent-port
        volumeMounts:
        - name: dse-data
          mountPath: /var/lib/cassandra
        - name: config-volume
          mountPath: /config
        livenessProbe:
          tcpSocket:
            port: 9042
          initialDelaySeconds: 900
          timeoutSeconds: 1
          periodSeconds: 30
          failureThreshold: 10
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "exec nodetool decommission"]
      volumes:
      - name: config-volume
        configMap:
          name: dse-config
  volumeClaimTemplates:
  - metadata:
      name: dse-data
      annotations:
        volume.beta.kubernetes.io/storage-class: fast
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 40Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dse-cluster-init-job
  labels:
    app: dse
spec:
  template:
    spec:
      initContainers:
      - name: init-opsc-up
        image: gcr.io/datastax-public/dse-curl:1.0
        command: ['sh', '-c', 'until curl -k https://${OPSC_DNS}:8443; do echo waiting for OPSC; sleep 5; done;']
        env:
        - name: OPSC_DNS
          value: opscenter-0.opscenter.default.svc.cluster.local
      containers:
      - name: dse-cluster-init
        image: gcr.io/datastax-public/dse-cluster-init:6.5.3
        imagePullPolicy: IfNotPresent
        env:
        - name: SEED_DNS
          value: dse-0.dse.default.svc.cluster.local,dse-1.dse.default.svc.cluster.local,dse-2.dse.default.svc.cluster.local
        - name: CLUSTER_NAME
          value: "My_Cluster"
        - name: CLUSTER_SIZE
          value: "3"
        - name: OPSC_DNS
          value: opscenter-0.opscenter.default.svc.cluster.local
        - name: OPSC_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opsc
              key: admin_password
      restartPolicy: Never
  backoffLimit: 8
